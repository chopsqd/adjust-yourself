export default {
   title: "Переменные и типы данных",
   text: `
        Рассмотрим основные концепции переменных и типов данных в этом мощном языке программирования.
        ##### Переменные в JavaScript
        Переменная - это именованное хранилище для данных, которое можно изменять в процессе выполнения программы. В JavaScript переменные объявляются с использованием ключевого слова **\`var\`**, **\`let\`** или **\`const\`**. Давайте рассмотрим каждое из них подробнее:
        - **var**: Ранее использовалось для объявления переменных, но с появлением **\`let\`** и **\`const\`** стало менее рекомендуемым из-за своей неявной области видимости.
        - **let**: Предпочтительный способ объявления переменных в современном JavaScript. Переменные, объявленные с помощью **\`let\`**, имеют блочную область видимости, что означает, что они доступны только внутри блока, в котором были объявлены.
        - **const**: Используется для объявления переменных, значения которых не должны изменяться. Переменные, объявленные с помощью **\`const\`**, также имеют блочную область видимости и должны быть инициализированы при объявлении.
        ##### Типы данных в JavaScript
        JavaScript поддерживает различные типы данных, которые можно разделить на две основные категории: примитивные типы данных и составные типы данных.
        1. **Примитивные типы данных**: В JavaScript существует шесть примитивных типов данных:
            - **Числа (Number)**: Представляют как целые, так и десятичные числа. Например, **\`42\`** или **\`3.14\`**.
            - **Строки (String)**: Представляют последовательность символов. Например, **\`"Привет, мир!"\`**.
            - **Булевый (Boolean)**: Представляет логическое значение **\`true\`** или **\`false\`**.
            - **Undefined**: Обозначает отсутствие значения.
            - **Null**: Представляет отсутствие значения или пустой объект.
            - **Symbol**: Уникальные и неизменяемые значения, используемые для создания уникальных свойств объектов.
        2. **Составные типы данных**: В JavaScript также существуют составные типы данных, такие как:
            - **Массивы (Array)**: Упорядоченные коллекции элементов.
            - **Объекты (Object)**: Коллекции пар ключ-значение, где ключи - это строки, а значения - это любые типы данных, включая другие объекты и функции.
        ##### Примеры использования переменных и типов данных
        \`\`\`jsx
        // Пример объявления переменных
        let name = "John";
        const age = 30;
        var isStudent = true;
        
        // Примеры использования различных типов данных
        let number = 42;
        let greeting = "Привет, мир!";
        let isOpen = true;
        let fruits = ["яблоко", "банан", "апельсин"];
        let person = {
          name: "John",
          age: 30,
          isStudent: false
        };
        \`\`\`
        ##### Заключение
        В этой лекции мы рассмотрели основные концепции переменных и типов данных в JavaScript. Переменные представляют собой именованные хранилища данных, а типы данных определяют характеристики этих данных. Понимание этих концепций является фундаментом для дальнейшего изучения языка и его применения в разработке веб-приложений.
    `,
   test: [
      {
         question: "Какие ключевые слова используются для объявления переменных в JavaScript?",
         options: [
            {
               answer: "variable, let, constant",
               isCorrect: false
            },
            {
               answer: "var, let, const",
               isCorrect: true
            },
            {
               answer: "var, constant, this",
               isCorrect: false
            },
            {
               answer: "define, let, const",
               isCorrect: false
            }
         ]
      },
      {
         question: "Какой из следующих типов данных в JavaScript представляет уникальные и неизменяемые значения?",
         options: [
            {
               answer: "Number",
               isCorrect: false
            },
            {
               answer: "String",
               isCorrect: false
            },
            {
               answer: "Symbol",
               isCorrect: true
            },
            {
               answer: "Boolean",
               isCorrect: false
            }
         ]
      },
      {
         question: "Какой тип данных используется для представления последовательности символов в JavaScript?",
         options: [
            {
               answer: "Number",
               isCorrect: false
            },
            {
               answer: "Boolean",
               isCorrect: false
            },
            {
               answer: "String",
               isCorrect: true
            },
            {
               answer: "Array",
               isCorrect: false
            }
         ]
      },
      {
         question: "Какое ключевое слово используется для объявления переменной, значение которой не должно изменяться?",
         options: [
            {
               answer: "let",
               isCorrect: false
            },
            {
               answer: "var",
               isCorrect: false
            },
            {
               answer: "const",
               isCorrect: true
            },
            {
               answer: "static",
               isCorrect: false
            }
         ]
      },
      {
         question: "Какой из следующих типов данных в JavaScript используется для создания упорядоченных коллекций элементов?",
         options: [
            {
               answer: "Object",
               isCorrect: false
            },
            {
               answer: "String",
               isCorrect: false
            },
            {
               answer: "Array",
               isCorrect: true
            },
            {
               answer: "Symbol",
               isCorrect: false
            }
         ]
      }
   ]
}
