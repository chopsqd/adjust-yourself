export default {
   title: "Массивы и объекты",
   text: `
        В этой лекции мы рассмотрим две важные структуры данных в JavaScript: массивы и объекты.
        ##### Массивы в JavaScript
        Массив - это упорядоченная коллекция элементов, которые могут быть любого типа данных. В JavaScript массивы могут содержать элементы разных типов и даже другие массивы. Давайте рассмотрим базовые операции с массивами:
        - **Создание массива**: Массивы могут быть созданы с помощью квадратных скобок **\`[]\`** и заполнены элементами:
            \`\`\`jsx
            let numbers = [1, 2, 3, 4, 5];
            let fruits = ["яблоко", "банан", "апельсин"];
            \`\`\`
        - **Доступ к элементам массива**: Элементы массива доступны по их индексу, начиная с 0:
            \`\`\`jsx
            console.log(numbers[0]); // Выведет: 1
            console.log(fruits[1]); // Выведет: банан
            \`\`\`
        - **Изменение элементов массива**: Элементы массива могут быть изменены по их индексу:
            \`\`\`jsx
            fruits[2] = "груша";
            console.log(fruits); // Выведет: ["яблоко", "банан", "груша"]
            \`\`\`
        - **Длина массива**: Длина массива может быть получена с помощью свойства **\`length\`**:
            \`\`\`jsx
            console.log(numbers.length); // Выведет: 5
            \`\`\`
        ##### Объекты в JavaScript
        Объект - это коллекция пар ключ-значение, где ключи являются строками, а значения могут быть любого типа данных. В JavaScript объекты используются для организации и хранения данных. Давайте рассмотрим основные операции с объектами:
        - **Создание объекта**: Объекты могут быть созданы с помощью фигурных скобок **\`{}\`** и заполнены свойствами:
            \`\`\`jsx
            let person = {
              name: "John",
              age: 30,
              isStudent: false
            };
            \`\`\`
        - **Доступ к свойствам объекта**: Свойства объекта доступны по их ключу:
            \`\`\`jsx
            console.log(person.name); // Выведет: John
            console.log(person["age"]); // Выведет: 30
            \`\`\`
        - **Изменение свойств объекта**: Свойства объекта могут быть изменены путем присваивания нового значения:
            \`\`\`jsx
            person.age = 35;
            console.log(person.age); // Выведет: 35
            \`\`\`
        - **Добавление новых свойств объекта**: Новые свойства могут быть добавлены к объекту в любое время:
            \`\`\`jsx
            person.city = "New York";
            console.log(person); // Выведет: {name: "John", age: 35, isStudent: false, city: "New York"}
            \`\`\`
        ##### Заключение
        Массивы и объекты - это две основные структуры данных в JavaScript, которые используются для организации и хранения данных. Понимание их работы позволяет создавать более сложные и структурированные приложения.
    `,
   test: [
      {
         question: "Какие структуры данных используются для организации и хранения данных в JavaScript?",
         options: [
            {
               answer: "Таблицы и списки",
               isCorrect: false
            },
            {
               answer: "Массивы и строки",
               isCorrect: false
            },
            {
               answer: "Массивы и объекты",
               isCorrect: true
            },
            {
               answer: "Стеки и очереди",
               isCorrect: false
            }
         ]
      },
      {
         question: "Какой из следующих операторов используется для доступа к элементам массива по их индексу?",
         options: [
            {
               answer: ".",
               isCorrect: false
            },
            {
               answer: "::",
               isCorrect: false
            },
            {
               answer: "[]",
               isCorrect: true
            },
            {
               answer: "<>",
               isCorrect: false
            }
         ]
      },
      {
         question: "Как можно изменить значение свойства объекта в JavaScript?",
         options: [
            {
               answer: "С помощью оператора =",
               isCorrect: true
            },
            {
               answer: "С помощью оператора +",
               isCorrect: false
            },
            {
               answer: "С помощью оператора :",
               isCorrect: false
            },
            {
               answer: "С помощью оператора =>",
               isCorrect: false
            }
         ]
      },
      {
         question: "Как получить длину массива в JavaScript?",
         options: [
            {
               answer: "Свойство size",
               isCorrect: false
            },
            {
               answer: "Метод length()",
               isCorrect: false
            },
            {
               answer: "Метод size()",
               isCorrect: false
            },
            {
               answer: "Свойство length",
               isCorrect: true
            }
         ]
      },
      {
         question: "Как добавить новое свойство к объекту в JavaScript?",
         options: [
            {
               answer: "С помощью метода addProperty",
               isCorrect: false
            },
            {
               answer: "С помощью оператора +",
               isCorrect: false
            },
            {
               answer: "Присвоить значение новому свойству напрямую",
               isCorrect: true
            },
            {
               answer: "С помощью оператора :",
               isCorrect: false
            }
         ]
      }
   ]
}
